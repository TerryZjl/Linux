#include <sys/socket.h>
#include<string.h>
#include<unistd.h>
#include<stdlib.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include<stdio.h>
#include<sys/types.h>


void use(char *argv)
{
    printf("#%s [port_srvera]\n", argv);
}
int main(int argc, char *argv[])
{
    printf("main start\n");
    if(argc<2)
    {
        use(argv[0]);
        return 3;
    }
    printf("use is ok\n");
    int sock = socket(AF_INET, SOCK_DGRAM, 0);
    if(sock<0){
       perror("socket");
       return 1;
    } 
 
    printf("create socket is ok\n");
    struct sockaddr_in client;
    client.sin_family = AF_INET;
    client.sin_port =htons(atoi( argv[1]));
    client.sin_addr.s_addr = htonl(INADDR_ANY);
    socklen_t addlen = sizeof(client);
    printf("bind qian\n");
     if(bind(sock, (struct sockaddr*)&client,sizeof(client))<0){
        perror("bind");
        return 2;
    }
       
    while(1)
    {
        
        printf("client say#");
        fflush(stdout);
        char buf[1024];
        ssize_t recv = recvfrom(sock, buf, sizeof(buf), 0,(struct sockaddr*)&client,&addlen);
        printf("%s\n",buf);
        printf("please enter#");
        fflush(stdout);
        fgets(buf, sizeof(buf), stdin);
        buf[strlen(buf)-1] = '\0';
        ssize_t send = sendto(sock, buf, sizeof(buf), 0,(struct sockaddr*)&client,addlen);
        char* str = "quit";
        if(strcmp(buf, str)==0){
             break;
        }
    }      
    printf("client goodbye!!!\n");
    return 0;
}

